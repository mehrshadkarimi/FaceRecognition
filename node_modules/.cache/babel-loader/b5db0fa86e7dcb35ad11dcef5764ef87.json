{"ast":null,"code":"var _jsxFileName = \"/home/mehrshad/Desktop/facerecognition/src/App.js\";\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Logo from './components/Logo/Logo';\nimport Imagelinkform from './components/Imagelinkform/Imagelinkform';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nconst app = new Clarifai.App({\n  apiKey: 'c4edd9eb93784395806f82b93a7270ac'\n});\nconst particleOption = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 200\n    },\n    \"size\": {\n      \"value\": 3\n    }\n  },\n  \"interactivity\": {\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"repulse\"\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"center pa4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Imagelinkform, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mehrshad/Desktop/facerecognition/src/App.js"],"names":["React","Component","Clarifai","Particles","Logo","Imagelinkform","FaceRecognition","app","App","apiKey","particleOption","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Logo from './components/Logo/Logo';\nimport Imagelinkform from './components/Imagelinkform/Imagelinkform';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\n\nconst app = new Clarifai.App({\n apiKey: 'c4edd9eb93784395806f82b93a7270ac'\n});\n\nconst particleOption={\n      \"particles\": {\n          \"number\": {\n              \"value\": 200\n          },\n          \"size\": {\n              \"value\": 3\n          }\n      },\n      \"interactivity\": {\n          \"events\": {\n              \"onhover\": {\n                  \"enable\": true,\n                  \"mode\": \"repulse\"\n              }\n          }\n      }\n\n}\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n     input: '',\n      imageUrl: '',\n      box:{}\n    }\n  }\n\n calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n\n onInputChange = (event) => {\n    this.setState({input:event.target.value});\n  }\n\n onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL,this.state.input)\n    .then(response=> this.displayFaceBox(this.calculateFaceLocation(response)))\n     .catch(err =>console.log(err));\n  }\n\n  render(){\n     return(\n        <div className=\"App\">\n            <Particles className=\"particles\" params={particleOption} />\n                <div className=\"center pa4\">\n                    <Logo />\n                   \n                </div>\n                    <Imagelinkform \n                        onInputChange={this.onInputChange}\n                        onButtonSubmit={this.onButtonSubmit} \n                    />\n                <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n        </div>\n    );\n    \n  }\n    \n   \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}